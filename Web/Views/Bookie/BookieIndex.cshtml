@model SolutionNorSolutionPort.AspMvc.Controllers.BookieContract

@{
    ViewBag.Title = "Bookie";
}

<h2>Bookie</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.Label(
            "Departure / Arrival:", 
            htmlAttributes: new { 
                @class = "control-label col-md-2",
                @style = "display:inline-block;width:175px"
            }
        )
        @Html.DropDownList(
            "DepartureAirportId",
            null,
            htmlAttributes: new {
                 @class = "form-control",
                 //@onchange = "form.submit();" 
                 @style = "display:inline-block;width:225px"
            }
        )

        @Html.DropDownList(
            "ArrivalAirportId",
            null,
            htmlAttributes: new {
                @class = "form-control",
                //@onchange = "form.submit();"
                @style = "display:inline-block;width:225px"
            }
        )
        <br />
        @Html.Label("Period:", 
            htmlAttributes: new {
                @class = "control-label col-md-2",
                @style = "width:175px"
            }
        )

        @Html.EditorFor(model => model.FromDateTime, new { 
            htmlAttributes = new { 
                @class = "form-control date-picker", 
                @style = "display:inline-block;width:225px", 
                @Value = @Model.FromDateTime.ToString("yyyy-MM-dd") 
                } 
            }
        )
        @Html.ValidationMessageFor(model => model.FromDateTime, "", new { @class = "text-danger" })

        @Html.EditorFor(model => model.UntilDateTime, new { 
            htmlAttributes = new { 
                @class = "form-control date-picker", 
                @style = "display:inline-block;width:225px", 
                @Value = @Model.UntilDateTime.ToString("yyyy-MM-dd") 
                } 
            }
        )
        @Html.ValidationMessageFor(model => model.UntilDateTime, "", new { @class = "text-danger" })

        <input type="submit" value="Search" class="btn-primary" style="display:inline-block" />
    </div>

    <table class="table">
        <tr>
            <th>Flight</th>
            <th>Departure</th>
            <th>Arrival</th>
            <th>From</th>
            <th>Until</th>
            <th>Fare</th>
            <th></th>
        </tr>

        @foreach (var item in Model.Flights) {
            <tr>
                <td>@Html.Raw(item.AirlineIdentifierCode + item.FlightNumber) </td>
                <td>@Html.Raw('(' + item.DepartureAirportIdentifierCode + ") " + item.DepartureAirportName) </td>
                <td>@Html.Raw('(' + item.ArrivalAirportIdentifierCode + ") " + item.ArrivalAirportName) </td>
                <td>@Html.DisplayFor(modelItem => item.FromDateTime) </td>
                <td>@Html.DisplayFor(modelItem => item.UntilDateTime) </td>
                <td>@Html.Raw(item.Amount.ToString("f2") + ' ' + item.FinancialCurrencyTypeCode) </td>
                <td>
                    @if (item.BookingOpenFlag) {
                        @Html.ActionLink("Book", "BookingCreateWithFlightDirect", "Booking", new { flightId = item.FlightId }, null)
                    }
                </td>
            </tr>
        }
    </table>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Styles.Render("~/Content/themes/base/all.css")
    <script type="text/javascript">
        $(function () {
            // This will make every element with the class "date-picker" into a DatePicker element
            $('.date-picker').datepicker(({ dateFormat: "yy-mm-dd" }));
        })
    </script>
}
